"use strict";var ApplicationConfiguration=function(){var applicationModuleName="estimate-swarm",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.utils","ngMaterial","ui.tree","ngAria"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]).config(function($mdThemingProvider){$mdThemingProvider.theme("default").primaryPalette("indigo").accentPalette("yellow")}).constant("RESOURCE_DOMAIN",""),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("projects"),ApplicationConfiguration.registerModule("reports"),ApplicationConfiguration.registerModule("sidenav"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus","$location","$mdSidenav","$mdUtil","Headerpath",function($scope,Authentication,Menus,$location,$mdSidenav,$mdUtil,Headerpath){function buildToggler(navID){var debounceFn=$mdUtil.debounce(function(){$mdSidenav(navID).toggle().then(function(){})},300);return debounceFn}$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.getHeaderPath=function(){var headerPath=$location.$$path;if("/"===headerPath)headerPath="Welcome";else{if(headerPath=headerPath.substring(headerPath.indexOf("/")+1,headerPath.length),-1!==headerPath.indexOf("edit")&&-1!==headerPath.indexOf("projects")){var projectID=headerPath.substring(headerPath.indexOf("projects")+9,headerPath.indexOf("edit")-1);headerPath=headerPath.replace(projectID,Headerpath.getProjectPath()),headerPath=headerPath.substring(0,headerPath.indexOf("edit")-1)}else if(-1!==headerPath.indexOf("reports")&&-1!==headerPath.indexOf("/")){var reportID=headerPath.substring(headerPath.indexOf("reports")+8,headerPath.length);headerPath=headerPath.replace(reportID,Headerpath.getReportPath())}var tokens=headerPath.split("/");headerPath="";for(var i=0;i<tokens.length;i++)tokens[i]=capitalizeFirstLetter(tokens[i]),headerPath+=tokens[i],i!==tokens.length-1&&(headerPath+=" > ")}return headerPath.trim()};var capitalizeFirstLetter=function(string){return string.charAt(0).toUpperCase()+string.slice(1)};$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1}),$scope.goTo=function(route){$location.path(route)},$scope.onProjects=function(){return"/projects"===$location.path()},$scope.sidenav=$mdSidenav,$scope.toggleLeft=buildToggler("left")}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").controller("MainController",["$scope",function($scope){}]),angular.module("core").factory("Headerpath",[function(){var paths={project:"",report:""};return{setProjectPath:function(path){paths.project=path},setReportPath:function(path){paths.report=path},getProjectPath:function(){return paths.project},getReportPath:function(){return paths.report}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("projects").config(["$stateProvider",function($stateProvider){$stateProvider.state("listProjects",{url:"/projects",templateUrl:"modules/projects/views/list-projects.client.view.html"}).state("createProject",{url:"/projects/create",templateUrl:"modules/projects/views/create-project.client.view.html"}).state("viewProject",{url:"/projects/:projectId",templateUrl:"modules/projects/views/view-project.client.view.html"}).state("editProject",{url:"/projects/:projectId/edit",templateUrl:"modules/projects/views/edit-project.client.view.html"})}]),angular.module("projects").controller("CreateProjectController",["$scope","$stateParams","$location","Authentication","Projects","$http","$mdToast","$mdDialog","$timeout","$rootScope","RESOURCE_DOMAIN",function($scope,$stateParams,$location,Authentication,Projects,$http,$mdToast,$mdDialog,$timeout,$rootScope,RESOURCE_DOMAIN){$scope.authentication=Authentication,$scope.people=[],$http.get(RESOURCE_DOMAIN+"/users/getUsers").success(function(users){for(var i in users)$scope.people.push({name:users[i].username,selected:!1})});var buildSelectedArray=function(){var selected=[];for(var i in $scope.people)$scope.people[i].selected&&selected.push($scope.people[i].name);return selected};$scope.createProject=function(){var project=new Projects({name:$scope.projectName,description:$scope.description,users:buildSelectedArray(),owner:$scope.authentication.user.username,openForEstimation:!1});project.$save(function(response){$location.path("projects/"+project._id+"/edit"),$mdToast.show($mdToast.simple().content("Project created").position($scope.getToastPosition()).hideDelay(3e3))},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.toastPosition={bottom:!0,top:!1,left:!1,right:!0},$scope.getToastPosition=function(){return Object.keys($scope.toastPosition).filter(function(pos){return $scope.toastPosition[pos]}).join(" ")}}]),angular.module("projects").controller("ProjectEditController",["$scope","$stateParams","$location","Authentication","Projects","$http","$mdToast","$mdDialog","$timeout","$rootScope","Headerpath","RESOURCE_DOMAIN",function($scope,$stateParams,$location,Authentication,Projects,$http,$mdToast,$mdDialog,$timeout,$rootScope,Headerpath,RESOURCE_DOMAIN){function DialogController($scope,$mdDialog){$scope.hide=function(){$mdDialog.hide()},$scope.cancel=function(){$mdDialog.cancel()}}$scope.members=!0,$scope.estimated=!1,$scope.goTo=function(route){$location.path(route)},$scope.authentication=Authentication,$scope.userIndex=-1;var project={projectId:$stateParams.projectId};$http({method:"POST",url:RESOURCE_DOMAIN+"/project",data:project}).success(function(data){if(0!==data.length){var tmp=data[0];for(var u in tmp.users)tmp.users[u]===$scope.authentication.user.username&&($scope.userIndex=u);if(-1===$scope.userIndex){var toast=$mdToast.simple().content("Not authorised to estimate").action("").highlightAction(!1).position($scope.getToastPosition());$mdToast.show(toast)}}}),$scope.rootIsEmpty=function(){return $scope.project.$resolved!==!1?$scope.project.children.length<1?!0:!1:void 0},$scope.initUsers=function(scope){$http.get("/users/getUsers").success(function(users){scope.people=[];for(var i in users){for(var tempIsEstimator=!1,j=0;j<scope.project.users.length;++j)users[i].username===scope.project.users[j]&&(tempIsEstimator=!0);scope.people.push({username:users[i].username,isEstimator:tempIsEstimator})}})},$scope.showAddEstimatorDialogBox=function(ev){var newScope=$scope.$new();$mdDialog.show({controller:DialogController,templateUrl:"modules/projects/views/add-estimator.client.view.html",parent:angular.element(document.body),targetEvent:ev,scope:newScope})},$scope.updateEstimators=function(){for(var add=[],remove=[],k=0;k<$scope.project.users.length;++k)remove.push(k);for(var i=0;i<$scope.people.length;++i)if($scope.people[i].isEstimator===!0){for(var found=!1,j=0;j<$scope.project.users.length;++j)if($scope.project.users[j]===$scope.people[i].username){var index=remove.indexOf(j);index>-1&&remove.splice(index,1),found=!0;break}found===!1&&add.push($scope.people[i])}$scope.removeEstimatorsFromProject(remove),$scope.addEstimatorsToProject(add),$scope.saveProject()},$scope.removeEstimatorsFromProject=function(removeArr){for(var i=removeArr.length-1;i>=0;--i)$scope.project.users.splice(removeArr[i],1);$scope.project.children.length>0&&$scope.removeEstimatorsRecursiveDescent($scope.project.children[0],removeArr)},$scope.removeEstimatorsRecursiveDescent=function(node,removeArr){for(var i=removeArr.length-1;i>=0;--i)node.estimations.splice(removeArr[i],1),node.minestimations.splice(removeArr[i],1),node.maxestimations.splice(removeArr[i],1);for(var i=0;i<node.nodes.length;++i)$scope.removeEstimatorsRecursiveDescent(node.nodes[i],removeArr)},$scope.addEstimatorsToProject=function(addArr){for(var i=0;i<addArr.length;++i)$scope.project.users.push(addArr[i].username);$scope.project.children.length>0&&$scope.addEstimatorsRecursiveDescent($scope.project.children[0],addArr)},$scope.addEstimatorsRecursiveDescent=function(node,addArr){for(var i=0;i<addArr.length;++i)node.estimations.push(null),node.minestimations.push(null),node.maxestimations.push(null);for(var i=0;i<node.nodes.length;++i)$scope.addEstimatorsRecursiveDescent(node.nodes[i],addArr)},$scope.owner=function(){return $scope.project.$resolved!==!1?$scope.project.owner===$scope.authentication.user.username?!0:!1:void 0},$scope.estimator=function(){return-1===$scope.userIndex?!1:!0},$scope.submitEstimation=function(){$scope.saveProject(),$scope.estimated=!0,$scope.determineEstimations()},$scope.determineEstimations=function(){for(var i=0;i<$scope.project.users.length;++i)if(null===$scope.project.children[0].estimations[i])return;$scope.project.openForEstimation=!1,$scope.sendEstimationReport()},$scope.sendEstimationReport=function(){$http({method:"POST",url:RESOURCE_DOMAIN+"/reports",data:$scope.project}).success(function(data){})},$scope.openForEstimation=function(){for(var i in $scope.project.children[0].estimations)$scope.project.children[0].estimations[i]=null;var confirm=(new $mdDialog.confirm).parent(angular.element(document.body)).title("Are you sure you want to open the project for estimations?").content("This will allow estimators to estimate, but will lock the project tree to its current state.").ariaLabel("Open for estimation").ok("Yes").cancel("No");$mdDialog.show(confirm).then(function(){$timeout(function(){$scope.project.openForEstimation=!0,$scope.saveProject();var project={projectId:$scope.project._id};$http({method:"POST",url:RESOURCE_DOMAIN+"/sendInvites",data:project}).success(function(data){})})},function(){})},$scope.isOpenForEstimation=function(){return $scope.project.openForEstimation},$scope.addRootNode=function(){var estimationsArr=[],minEstimations=[],maxEstimations=[];for(var i in $scope.project.users)estimationsArr.push(null),minEstimations.push(null),maxEstimations.push(null);$scope.project.children.push({id:"node",title:"Root Node",nodes:[],collapsed:!1,estimations:estimationsArr,minestimations:minEstimations,maxestimations:maxEstimations})},$scope.update=function(){var project=$scope.project;project.$update(function(){$location.path("projects/"+project._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.projects=Projects.query()},$scope.findOne=function(){$scope.project=Projects.get({projectId:$stateParams.projectId},function(){Headerpath.setProjectPath($scope.project.name),null===$scope.project.children[0].estimations[$scope.userIndex]?$scope.estimated=!1:$scope.estimated=!0})},$scope.newSubItem=function(scope){var nodeData=scope.$modelValue,estimationsArr=[],minEstimations=[],maxEstimations=[];for(var i in scope.project.users)estimationsArr.push(null),minEstimations.push(null),maxEstimations.push(null);nodeData.nodes.push({id:10*nodeData.id+nodeData.nodes.length,title:nodeData.title+"."+(nodeData.nodes.length+1),nodes:[],collapsed:!1,estimations:estimationsArr,minestimations:minEstimations,maxestimations:maxEstimations})},$scope.undoToolTip=function(node,removeNode,newSubItem){var tree=$.extend(!0,[],$scope.project.children);removeNode(node);var toast=$mdToast.simple().content("Node deleted").action("UNDO").highlightAction(!1).position($scope.getToastPosition());$mdToast.show(toast).then(function(){$scope.project.children=$.extend(!0,[],tree)})},$scope.toastPosition={bottom:!0,top:!1,left:!1,right:!0},$scope.getToastPosition=function(){return Object.keys($scope.toastPosition).filter(function(pos){return $scope.toastPosition[pos]}).join(" ")},$scope.saveProject=function(){$scope.project.$update(function(response){$mdToast.show($mdToast.simple().content("Project saved").position($scope.getToastPosition()).hideDelay(3e3))},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.querySearch=function(query){var results=query?$scope.projects.filter(createFilterFor(query)):$scope.projects;return results},$scope.searchTextChange=function(text){console.log("Text changed to "+text)},$scope.selectedItemChange=function(item){console.log(item),$scope.goTo("/projects/"+item._id+"/edit")};var createFilterFor=function(query){var lowercaseQuery=angular.lowercase(query);return function(item){var name=angular.lowercase(item.name);return 0===name.indexOf(lowercaseQuery)}};$scope.collapseAll=function(){$scope.$broadcast("collapseAll")},$scope.expandAll=function(){$scope.$broadcast("expandAll")},$scope.showDescriptionDialog=function(ev,node){$scope.currentNode=node,$scope.setCurrentNode(node,function(){var newScope=$scope.$new();$mdDialog.show({controller:DialogController,templateUrl:"modules/projects/views/description.dialog.client.view.html",parent:angular.element(document.body),targetEvent:ev,scope:newScope})})},$scope.updateLocalTree=function(scope){var count=$scope.userIndex,currnode=$scope.project.children[0];$scope.getEstimation(currnode,count,function(){})},$scope.getEstimation=function(node,userNum,callback){if(node.nodes.length<=0)callback(node.estimations[userNum],node.minestimations[userNum],node.maxestimations[userNum]);else{node.estimations[userNum]=null,node.minestimations[userNum]=null,node.maxestimations[userNum]=null;for(var i in node.nodes)$scope.getEstimation(node.nodes[i],userNum,function(result,minRes,maxRes){null===node.estimations[userNum]?node.estimations[userNum]=parseInt(result):node.estimations[userNum]+=parseInt(result),null===node.minestimations[userNum]?node.minestimations[userNum]=parseInt(minRes):node.minestimations[userNum]+=parseInt(minRes),null===node.maxestimations[userNum]?node.maxestimations[userNum]=parseInt(maxRes):node.maxestimations[userNum]+=parseInt(maxRes),callback(parseInt(result),parseInt(minRes),parseInt(maxRes))})}},$scope.currentNode=void 0,$scope.setCurrentNode=function(node,callback){$scope.currentNode=node,void 0!==callback&&callback()},$scope.$on("$locationChangeStart",function(event,newUrl,oldUrl){if(!$scope.confirm){event.preventDefault();var confirm=$mdDialog.confirm().parent(angular.element(document.body)).title("Are you sure you want to leave this page?").content("All unsaved changes will be lost.").ariaLabel("Yes").ok("Yes").cancel("No").targetEvent(event);$mdDialog.show(confirm).then(function(){newUrl=newUrl.split("#!"),$scope.goTo(newUrl[1]),$scope.confirm=!0},function(){})}})}]),angular.module("projects").controller("ProjectsController",["$scope","$stateParams","$location","Authentication","Projects","$http","$mdToast","$mdDialog","$timeout","$rootScope","RESOURCE_DOMAIN",function($scope,$stateParams,$location,Authentication,Projects,$http,$mdToast,$mdDialog,$timeout,$rootScope,RESOURCE_DOMAIN){function DialogController($scope,$mdDialog){$scope.hide=function(){$mdDialog.hide()},$scope.cancel=function(){$mdDialog.cancel()}}$scope.goTo=function(route){$location.path(route)},$scope.owner=function(project){return Authentication.user.username===project.owner?!0:!1},$scope.createProject=function(){var project=new Projects({name:$scope.projectName,description:$scope.description,users:$scope.selected});project.$save(function(response){$location.path("projects/"+project._id+"/edit"),$mdToast.show($mdToast.simple().content("Project created").position($scope.getToastPosition()).hideDelay(3e3))},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.deleteProject=function(project){var confirm=$mdDialog.confirm().parent(angular.element(document.body)).title("Are you sure you wish to delete project "+project.name+"?").content("This will delete the project and prevent it from showing up in the list of projects.").ariaLabel("Delete the project").ok("Yes").cancel("No");$mdDialog.show(confirm).then(function(){$timeout(function(){$scope.remove(project)})},function(){})},$scope.toastPosition={bottom:!0,top:!1,left:!1,right:!0},$scope.getToastPosition=function(){return Object.keys($scope.toastPosition).filter(function(pos){return $scope.toastPosition[pos]}).join(" ")},$scope.remove=function(project){if(project){project.$remove();for(var i in $scope.projects)$scope.projects[i]===project&&$scope.projects.splice(i,1)}else $scope.project.$remove(function(){$location.path("projects")})},$scope.update=function(){var project=$scope.project;project.$update(function(){$location.path("projects/"+project._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.projects=Projects.query()},$scope.findOne=function(){$scope.project=Projects.get({projectId:$stateParams.projectId})},$scope.updateProjects=function(){$scope.projects=Projects.query()},$scope.querySearch=function(query){var results=query?$scope.projects.filter(createFilterFor(query)):$scope.projects;return results},$scope.searchTextChange=function(text){console.log("Text changed to "+text)},$scope.selectedItemChange=function(item){console.log(item),$scope.goTo("/projects/"+item._id+"/edit")};var createFilterFor=function(query){var lowercaseQuery=angular.lowercase(query);return function(item){var name=angular.lowercase(item.name);return 0===name.indexOf(lowercaseQuery)}};$scope.collapseAll=function(){$scope.$broadcast("collapseAll")},$scope.expandAll=function(){$scope.$broadcast("expandAll")},$scope.showDescriptionDialog=function(ev,node){$scope.currentNode=node,$scope.setCurrentNode(node,function(){var newScope=$scope.$new();$mdDialog.show({controller:DialogController,templateUrl:"modules/projects/views/description.dialog.client.view.html",parent:angular.element(document.body),targetEvent:ev,scope:newScope})})},$scope.isOverflow=function(){var element=document.getElementById("marquee");return element.scrollWidth>element.clientWidth?!0:!1},$scope.isNotOverflow=function(){var element=document.getElementById("marquee");return element.scrollHeight>element.clientHeight||element.scrollWidth>element.clientWidth?!1:!0},$scope.test=function(){console.log("here")}}]),angular.module("projects").factory("Projects",["$resource","RESOURCE_DOMAIN",function($resource,RESOURCE_DOMAIN){return $resource(RESOURCE_DOMAIN+"/projects/:projectId",{projectId:"@_id"},{update:{method:"PUT"}})}]),angular.module("reports").config(["$stateProvider",function($stateProvider){$stateProvider.state("listReports",{url:"/reports",templateUrl:"modules/reports/views/list-reports.client.view.html"}).state("createReport",{url:"/reports/create",templateUrl:"modules/reports/views/create-report.client.view.html"}).state("viewReport",{url:"/reports/:reportId",templateUrl:"modules/reports/views/view-report.client.view.html"}).state("editReport",{url:"/reports/:reportId/edit",templateUrl:"modules/reports/views/edit-report.client.view.html"})}]),angular.module("reports").controller("ReportsController",["$scope","$stateParams","$location","Authentication","Reports","Headerpath",function($scope,$stateParams,$location,Authentication,Reports,Headerpath){$scope.authentication=Authentication,$scope.goTo=function(route){$location.path(route)},$scope.querySearch=function(query){var results=query?$scope.reports.filter(createFilterFor(query)):$scope.reports;return results},$scope.searchTextChange=function(text){console.log("Text changed to "+text)},$scope.selectedItemChange=function(item){console.log(item),$scope.goTo("/projects/"+item._id+"/edit")};var createFilterFor=function(query){var lowercaseQuery=angular.lowercase(query);return function(item){var name=angular.lowercase(item.name);return 0===name.indexOf(lowercaseQuery)}};$scope.create=function(){var report=new Reports({name:this.name});report.$save(function(response){$location.path("reports/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(report){if(report){report.$remove();for(var i in $scope.reports)$scope.reports[i]===report&&$scope.reports.splice(i,1)}else $scope.report.$remove(function(){$location.path("reports")})},$scope.update=function(){var report=$scope.report;report.$update(function(){$location.path("reports/"+report._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.reports=Reports.query()},$scope.findOne=function(){$scope.report=Reports.get({reportId:$stateParams.reportId},function(){Headerpath.setReportPath($scope.report.name)})}}]),angular.module("reports").directive("barChart",["D3",function(D3){return{link:function(scope,element,attrs){D3.d3().then(function(d3){})}}}]),angular.module("reports").directive("boxPlot",["D3","$window",function(D3,$window){return{restrict:"EA",scope:{},link:function(scope,element,attrs){D3.d3().then(function(d3){scope.$parent.report.$promise.then(function(){var project=scope.$parent.report.project,body=d3.select(element[0]).append("p"),bodyWidth=body.node().getBoundingClientRect().width,bodyHeight=30,body=d3.select(element[0]),createBox=function(_range,_minOutlier,_minStdDeviation,_median,_maxStdDeviation,_maxOutlier,rgb,node){var strokeWidth=2,bar=(body.append("p").text(node),body.append("svg").attr("width",bodyWidth+strokeWidth).attr("height",bodyHeight+strokeWidth)),svg=body.append("svg").attr("width",bodyWidth+strokeWidth).attr("height",bodyHeight+strokeWidth),middleHeight=bodyHeight/2,range=_range,ratio=parseInt(bodyWidth/range),strokeWidth=2,minOutlier=_minOutlier*ratio,minStdDeviation=_minStdDeviation*ratio,median=_median*ratio,maxStdDeviation=_maxStdDeviation*ratio,maxOutlier=_maxOutlier*ratio;svg.append("line").attr("x1",0+minOutlier).attr("y1",middleHeight).attr("x2",maxOutlier).attr("y2",middleHeight).style("stroke","black").style("stroke-dasharray","3, 3");var boxHeight=bodyHeight-strokeWidth,boxUpDownLength=boxHeight/2;svg.append("line").attr("x1",minOutlier).attr("y1",middleHeight+boxUpDownLength).attr("x2",minOutlier).attr("y2",middleHeight-boxUpDownLength).style("stroke","black"),svg.append("line").attr("x1",maxOutlier).attr("y1",middleHeight+boxUpDownLength).attr("x2",maxOutlier).attr("y2",middleHeight-boxUpDownLength).style("stroke","black");svg.append("rect").attr("width",maxStdDeviation-minStdDeviation).attr("height",boxHeight-strokeWidth).attr("x",minStdDeviation).attr("y",bodyHeight/2-boxHeight/2).attr("rx",5).attr("rx",5).style("fill","yellow").style("stroke","black");svg.append("line").attr("x1",median).attr("y1",middleHeight+boxUpDownLength-strokeWidth).attr("x2",median).attr("y2",middleHeight-boxUpDownLength-strokeWidth).style("stroke","black"),bar.append("rect").attr("width",bodyWidth).attr("height",boxHeight).attr("x",0).attr("y",0).attr("rx",5).attr("rx",5).style("fill","grey").style("stroke","black"),bar.append("rect").attr("width",maxOutlier).attr("height",boxHeight).attr("x",0).attr("y",0).attr("rx",5).attr("rx",5).style("fill","rgb("+(63-rgb)+", "+(81-rgb)+","+(181-rgb)+")").style("stroke","black"),bar.append("text").style("fill","white").attr("x",10).attr("y",middleHeight+5).text("Total Units: "+_maxOutlier+", Median: "+parseInt(_median))},maxRange=0,minRange=999999999,visitRange=function(node,project,data){for(var i=0;i<node.estimations.length;++i){var minOutlier,estimationMean=parseFloat((parseInt(node.minestimations[i])+4*parseInt(node.estimations[i])+parseInt(node.maxestimations[i]))/6).toFixed(2),stdDeviation=parseFloat((parseInt(node.minestimations[i])-parseInt(node.maxestimations[i]))/6).toFixed(2),minStdDeviation=parseFloat(parseFloat(estimationMean)+parseFloat(stdDeviation));minOutlier=node.minestimations[i]<minStdDeviation?parseInt(node.minestimations[i]):parseFloat(minStdDeviation);var maxOutlier,maxStdDeviation=parseFloat(parseFloat(estimationMean)-parseFloat(stdDeviation));maxOutlier=node.maxestimations[i]>maxStdDeviation?parseInt(node.maxestimations[i]):parseFloat(maxStdDeviation),minRange>minOutlier&&(minRange=minOutlier),maxOutlier>maxRange&&(maxRange=maxOutlier)}},visitCalc=function(node,project,data,rgb){for(var i=0;i<node.estimations.length;++i){var minOutlier,estimationMean=parseFloat((parseInt(node.minestimations[i])+4*parseInt(node.estimations[i])+parseInt(node.maxestimations[i]))/6).toFixed(2),stdDeviation=parseFloat((parseInt(node.minestimations[i])-parseInt(node.maxestimations[i]))/6).toFixed(2),minStdDeviation=parseFloat(parseFloat(estimationMean)+parseFloat(stdDeviation));minOutlier=node.minestimations[i]<minStdDeviation?parseInt(node.minestimations[i]):parseFloat(minStdDeviation);var maxOutlier,maxStdDeviation=parseFloat(parseFloat(estimationMean)-parseFloat(stdDeviation));maxOutlier=node.maxestimations[i]>maxStdDeviation?parseInt(node.maxestimations[i]):parseFloat(maxStdDeviation),createBox(maxRange-minRange,minOutlier-minRange,minStdDeviation-minRange,estimationMean-minRange,maxStdDeviation-minRange,maxOutlier-minRange,rgb,node.title)}},traverseTree=function(node,project,data,visit,rgb){if(null!==node){visit(node,project,data,rgb);for(var i=0;i<node.nodes.length;++i)traverseTree(node.nodes[i],project,data,visit,rgb),rgb-=50}},generateReport=function(project,data,visit,rbg){var projectTree=project.children[0];traverseTree(projectTree,project,data,visit,rgb)};scope.data=[],generateReport(project,scope.data,visitRange);var rgb=0;generateReport(project,scope.data,visitCalc,rgb)})})}}}]),angular.module("reports").directive("d3Bars",["D3","$window",function(D3,$window){return{restrict:"EA",scope:{},link:function(scope,element,attrs){D3.d3().then(function(d3){scope.$parent.report.$promise.then(function(){var project=scope.$parent.report.project,margin=parseInt(attrs.margin)||20,barHeight=parseInt(attrs.barHeight)||20,barPadding=parseInt(attrs.barPadding)||10,svg=d3.select(element[0]).append("svg").style("width","100%"),visit=function(node,project,data){for(var i=0;i<node.estimations.length;++i){var estimationMean=parseFloat((parseInt(node.minestimations[i])+4*parseInt(node.estimations[i])+parseInt(node.maxestimations[i]))/6).toFixed(2);data.push({title:node.title,name:project.users[i],score:estimationMean})}},traverseTree=function(node,project,data){if(null!==node){visit(node,project,data);for(var i=0;i<node.nodes.length;++i)traverseTree(node.nodes[i],project,data)}},generateReport=function(project,data){var projectTree=project.children[0];traverseTree(projectTree,project,data)};window.onresize=function(){scope.$apply()},scope.data=[],generateReport(project,scope.data),scope.$watch(function(){return angular.element($window)[0].width},function(){scope.render(scope.data)}),scope.render=function(data){if(svg.selectAll("*").remove(),data){var width=d3.select("#chart").node().getBoundingClientRect().width,height=scope.data.length*(barHeight+barPadding),color=d3.scale.category20(),xScale=d3.scale.linear().domain([0,d3.max(data,function(d){return d.score})]).range([0,width]);svg.attr("height",height),svg.selectAll("rect").data(data).enter().append("rect").attr("height",barHeight).attr("width",width).attr("x",Math.round(margin/2)).attr("y",function(d,i){return i*(barHeight+barPadding)}).attr("fill",function(d){return color(d.score)}).transition().duration(1e3).attr("width",function(d){return xScale(d.score)}),svg.selectAll("text").data(data).enter().append("text").attr("fill","#000").attr("y",function(d,i){return i*(barHeight+barPadding)+15}).attr("x",15).text(function(d){return d.title+": "+d.name+" estimated: "+d.score})}}})})}}}]),angular.module("reports").factory("D3",["$document","$q","$rootScope",function($document,$q,$rootScope){function onScriptLoad(){$rootScope.$apply(function(){d.resolve(window.d3)})}var d=$q.defer(),scriptTag=$document[0].createElement("script");scriptTag.type="text/javascript",scriptTag.async=!0,scriptTag.src="../../../lib/d3/d3.js",scriptTag.onreadystatechange=function(){"complete"===this.readyState&&onScriptLoad()},scriptTag.onload=onScriptLoad;var s=$document[0].getElementsByTagName("body")[0];return s.appendChild(scriptTag),{d3:function(){return d.promise}}}]),angular.module("reports").factory("Reports",["$resource","RESOURCE_DOMAIN",function($resource,RESOURCE_DOMAIN){return $resource(RESOURCE_DOMAIN+"reports/:reportId",{reportId:"@_id"},{update:{method:"PUT"}})}]),angular.module("sidenav").run(["Menus",function(Menus){}]),angular.module("sidenav").config(["$stateProvider",function($stateProvider){$stateProvider.state("dialog",{url:"/dialog",templateUrl:"modules/sidenav/views/dialog.client.view.html"})}]),angular.module("sidenav").controller("SidenavController",["$scope","$http","$mdDialog","$location","Authentication","Logindialog","$mdUtil","$mdSidenav","$log","RESOURCE_DOMAIN",function($scope,$http,$mdDialog,$location,Authentication,Logindialog,$mdUtil,$mdSidenav,$log,RESOURCE_DOMAIN){
function DialogController($scope,$mdDialog){$scope.hide=function(){$mdDialog.hide()},$scope.cancel=function(){$mdDialog.cancel()}}function buildToggler(navID){var debounceFn=$mdUtil.debounce(function(){$mdSidenav(navID).toggle().then(function(){$log.debug("toggle "+navID+" is done")})},300);return debounceFn}$scope.authentication=Authentication,$scope.signinDialog=function(ev){$mdDialog.show({controller:DialogController,templateUrl:"modules/users/views/authentication/signin.client.view.html",parent:angular.element(document.body),targetEvent:ev})},$scope.signupDialog=function(ev){$mdDialog.show({controller:DialogController,templateUrl:"modules/users/views/authentication/signup.client.view.html",parent:angular.element(document.body),targetEvent:ev})},$scope.toggleLeft=buildToggler("left"),$scope.go=function(path){$location.path(path)},$scope.signOut=function(){$http.get(RESOURCE_DOMAIN+"/auth/signout").success(function(response){$location.path(response)}),$http.get(RESOURCE_DOMAIN+"/auth/signout").success(function(response){$scope.authentication.user=null,$location.path("/")}).error(function(response){})}}]).controller("LeftCtrl",function($scope,$timeout,$mdSidenav,$log){$scope.close=function(){$mdSidenav("left").close().then(function(){$log.debug("close LEFT is done")})}}),angular.module("sidenav").factory("Logindialog",[function(){var properties={signin:!0,signup:!1,forgotPass:!1};return properties}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","$mdDialog","Authentication","RESOURCE_DOMAIN","$mdToast",function($scope,$http,$location,$mdDialog,Authentication,RESOURCE_DOMAIN,$mdToast){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$scope.confirmationPassword==$scope.credentials.password?$http.post(RESOURCE_DOMAIN+"/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$mdDialog.cancel(),$location.path("/projects")}).error(function(response){$scope.error=response.message}):$scope.error="Your passwords do not match"},$scope.signin=function(){$http.post(RESOURCE_DOMAIN+"/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$mdDialog.cancel(),$mdToast.show($mdToast.simple().content("Login successful").position($scope.getToastPosition()).hideDelay(3e3)),$location.path("/projects")}).error(function(response){$scope.error=response.message})},$scope.toastPosition={bottom:!0,top:!1,left:!1,right:!0},$scope.getToastPosition=function(){return Object.keys($scope.toastPosition).filter(function(pos){return $scope.toastPosition[pos]}).join(" ")}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication","RESOURCE_DOMAIN",function($scope,$stateParams,$http,$location,Authentication,RESOURCE_DOMAIN){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post(RESOURCE_DOMAIN+"/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post(RESOURCE_DOMAIN+"/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication","RESOURCE_DOMAIN",function($scope,$http,$location,Users,Authentication,RESOURCE_DOMAIN){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"](RESOURCE_DOMAIN+"/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post(RESOURCE_DOMAIN+"/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource","RESOURCE_DOMAIN",function($resource,RESOURCE_DOMAIN){return $resource(RESOURCE_DOMAIN+"/users",{},{update:{method:"PUT"}})}]);